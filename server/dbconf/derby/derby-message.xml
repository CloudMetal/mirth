<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'conf/dtd/mybatis-3-mapper.dtd'>

<mapper namespace="Message">
	<resultMap id="connectorMessage" type="ConnectorMessage">		
		<id property="messageId" column="message_id" />
		<id property="metaDataId" column="id" />
		<result property="connectorName" column="connector_name" />
		<result property="serverId" column="server_id" />
		<result property="dateCreated" column="date_created" />
		<result property="status" column="status" />
		<result property="connectorMap" column="connector_map" typeHandler="MapTypeHandler"/>
		<result property="channelMap" column="channel_map" typeHandler="MapTypeHandler"/>
		<result property="responseMap" column="response_map" typeHandler="MapTypeHandler"/>
		<result property="errors" column="errors" />
		<result property="sendAttempts" column="send_attempts" />
		<result property="chainId" column="chain_id" />
		<result property="orderId" column="order_id" />
		<collection property="metaDataMap" column="{localChannelId=local_channel_id,messageId=message_id,metaDataId=id}" ofType="map" select="selectCustomMetaData" />
	</resultMap>
	
	<resultMap id="messageContent" type="com.mirth.connect.donkey.model.message.MessageContent">
		<id property="messageId" column="message_id" />
		<id property="metaDataId" column="metadata_id" />
		<result property="contentType" column="content_type" typeHandler="com.mirth.connect.server.sqlmap.extensions.ContentTypeHandler" />
		<result property="content" column="content" />
		<result property="dataType" column="data_type" />
		<result property="encryptedContent" column="encrypted_content" />
	</resultMap>

	<select id="searchMessages" parameterType="map" resultType="map">
		SELECT 
			message.id AS "message_id",
			message.server_id AS "server_id",
			message.date_created AS "date_created",
			message.processed AS "processed",
			message.import_id AS "import_id",
			message.import_channel_id AS "import_channel_id",
			message.attempted_response AS "attempted_response",
			message.response_error AS "response_error",
			subquery."metadata_ids"
		FROM (
			SELECT
				m.id,
				GROUP_CONCAT(TRIM(CAST(CAST(mm.id AS CHAR(254)) AS VARCHAR(254)))) AS "metadata_ids"
	
			<include refid="searchMessagesBody" />
			
			GROUP BY m.id
			ORDER BY m.id DESC
			
			<if test="offset != null">
				OFFSET ${offset} ROWS
			</if>
			<if test="limit != null">
				FETCH FIRST ${limit} ROWS ONLY
			</if>
			) AS subquery
		INNER JOIN d_m${localChannelId} message ON subquery.id = message.id
		ORDER BY message.id DESC
	</select>
	
	<select id="searchMessagesCount" parameterType="map" resultType="long">
		SELECT COUNT(*) FROM (
			SELECT m.id
			<include refid="searchMessagesBody" />
			GROUP BY m.id
		) AS subquery
	</select>
	
	<select id="selectMessageIdsForReprocessing" parameterType="map" resultType="long">
		SELECT DISTINCT m.id
		<include refid="searchMessagesBody" />
	</select>
	
	<select id="selectMessageForReprocessing" parameterType="map" resultType="map">
		SELECT content AS "content", data_type AS "data_type", is_encrypted AS "is_encrypted"
		FROM d_mc${localChannelId}
		WHERE message_id = #{messageId}
		AND metadata_id = 0
		AND content_type = 'R'
	</select>
	
	<sql id="searchMessagesBody">
		FROM d_m${localChannelId} m
		JOIN d_mm${localChannelId} mm ON mm.message_id = m.id
		
		<if test="metaDataSearch != null">
			LEFT JOIN d_mcm${localChannelId} mcm ON mcm.message_id = mm.message_id AND mcm.metadata_id = mm.id
		</if>
		
		<if test="quickSearch != null || rawSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_raw ON mc_raw.message_id = m.id AND mc_raw.metadata_id = 0 AND mc_raw.content_type = 'R' AND mc_raw.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || processedRawSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_processed_raw ON mc_processed_raw.message_id = m.id AND mc_processed_raw.metadata_id = mm.id AND mc_processed_raw.content_type = 'P' AND mc_processed_raw.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || transformedSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_transformed ON mc_transformed.message_id = m.id AND mc_transformed.metadata_id = mm.id AND mc_transformed.content_type = 'T' AND mc_transformed.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || encodedSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_encoded ON mc_encoded.message_id = m.id AND mc_encoded.metadata_id = mm.id AND mc_encoded.content_type = 'E' AND mc_encoded.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || sentSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_sent ON mc_sent.message_id = m.id AND mc_sent.metadata_id = mm.id AND mc_sent.content_type = 'S' AND mc_sent.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || responseSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_response ON mc_response.message_id = m.id AND mc_response.metadata_id = mm.id AND mc_response.content_type = 'O' AND mc_response.is_encrypted = FALSE
		</if>
		
	    <if test="quickSearch != null || responseTransformedSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_response_transformed ON mc_response_transformed.message_id = m.id AND mc_response_transformed.metadata_id = mm.id AND mc_response_transformed.content_type = 'Q' AND mc_response_transformed.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || processedResponseSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_processed_response ON mc_processed_response.message_id = m.id AND mc_processed_response.metadata_id = mm.id AND mc_processed_response.content_type = 'N' AND mc_processed_response.is_encrypted = FALSE
		</if>
		
		<where>
			<if test="messageIdLower != null">
				m.id <![CDATA[ >= ]]> #{messageIdLower}
			</if>
			<if test="messageIdUpper != null">
				AND m.id <![CDATA[ <= ]]> #{messageIdUpper}
			</if>
			<if test="maxMessageId != null">
				AND m.id <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="startDate != null">
				AND m.date_created <![CDATA[ >= ]]> #{startDate}
			</if>
			<if test="endDate != null">
				AND m.date_created <![CDATA[ <= ]]> #{endDate}
			</if>
			<if test="serverId != null">
				AND m.server_id = #{serverId}
			</if>
			<if test="importIdLower != null">
				AND m.import_id <![CDATA[ >= ]]> #{importIdLower}
			</if>
			<if test="importIdUpper != null">
				AND m.import_id <![CDATA[ <= ]]> #{importIdUpper}
			</if>
			<if test="quickSearch != null">
				AND (UPPER(mc_raw.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_processed_raw.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_transformed.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_encoded.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_sent.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_response.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_response_transformed.content) LIKE '%' || UPPER(#{quickSearch}) || '%'
				OR UPPER(mc_processed_response.content) LIKE '%' || UPPER(#{quickSearch}) || '%')
			</if>
			<if test="statuses != null">
				AND mm.status IN
				<foreach item="status" collection="statuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			</if>
			<if test="metaDataIds != null">
				AND mm.id IN
				<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			<if test="rawSearch != null">
				AND UPPER(mc_raw.content) LIKE '%' || UPPER(#{rawSearch}) || '%'
			</if>
			<if test="processedRawSearch != null">
				AND UPPER(mc_processed_raw.content) LIKE '%' || UPPER(#{processedRawSearch}) || '%'
			</if>
			<if test="transformedSearch != null">
				AND UPPER(mc_transformed.content) LIKE '%' || UPPER(#{transformedSearch}) || '%'
			</if>
			<if test="encodedSearch != null">
				AND UPPER(mc_encoded.content) LIKE '%' || UPPER(#{encodedSearch}) || '%'
			</if>
			<if test="sentSearch != null">
				AND UPPER(mc_sent.content) LIKE '%' || UPPER(#{sentSearch}) || '%'
			</if>
			<if test="responseSearch != null">
				AND UPPER(mc_response.content) LIKE '%' || UPPER(#{responseSearch}) || '%'
			</if>
			<if test="responseTransformedSearch != null">
				AND UPPER(mc_response_transformed.content) LIKE '%' || UPPER(#{responseTransformedSearch}) || '%'
			</if>
			<if test="processedResponseSearch != null">
				AND UPPER(mc_processed_response.content) LIKE '%' || UPPER(#{processedResponseSearch}) || '%'
			</if>
			<if test="sendAttemptsLower != null">
				AND mm.send_attempts <![CDATA[ >= ]]> #{sendAttemptsLower}
			</if>
			<if test="sendAttemptsUpper != null">
				AND mm.send_attempts <![CDATA[ <= ]]> #{sendAttemptsUpper}
			</if>
			<if test="attachment != null and attachment == true">
				AND EXISTS (SELECT 1 FROM d_ma${localChannelId} ma WHERE ma.message_id = m.id)
			</if>
			<if test="metaDataSearch != null">
				<foreach item="element" collection="metaDataSearch">
					<choose>
						<when test="element.ignoreCase">
							AND UPPER(mcm.${element.columnName})
						</when>
						<otherwise>
							AND mcm.${element.columnName}
						</otherwise>
					</choose>
					
					<choose>
						<when test="element.ignoreCase">
							<![CDATA[ LIKE ]]> 
						</when>
						<when test="element.operator == 'EQUAL'">
							<![CDATA[ = ]]> 
						</when>
						<when test="element.operator == 'TEXT_EQUAL'">
							<![CDATA[ = ]]> 
						</when>
						<when test="element.operator == 'NOT_EQUAL'">
							<![CDATA[ != ]]> 
						</when>
						<when test="element.operator == 'LESS_THAN'">
							<![CDATA[ < ]]> 
						</when>
						<when test="element.operator == 'LESS_THAN_OR_EQUAL'">
							<![CDATA[ <= ]]> 
						</when>
						<when test="element.operator == 'GREATER_THAN'">
							<![CDATA[ > ]]> 
						</when>
						<when test="element.operator == 'GREATER_THAN_OR_EQUAL'">
							<![CDATA[ >= ]]> 
						</when>
						<when test="element.operator == 'CONTAINS' || element.operator == 'STARTS_WITH' || element.operator == 'ENDS_WITH'">
							<![CDATA[ LIKE ]]> 
						</when>
					</choose>
					
					<if test="element.operator == 'CONTAINS' || element.operator == 'ENDS_WITH'">
						'%' ||
					</if>
					
					<choose>
						<when test="element.ignoreCase">
							UPPER(#{element.value})
						</when>
						<otherwise>
							#{element.value}
						</otherwise>
					</choose>
						
					<if test="element.operator == 'CONTAINS' || element.operator == 'STARTS_WITH'">
						|| '%'
					</if>	
				</foreach>
			</if>
		</where>
	</sql>
	
	<select id="selectMessageById" resultType="map">
		SELECT
			id AS "id",
			server_id AS "server_id",
			date_created AS "date_created",
			processed AS "processed",
			import_id AS "import_id",
			import_channel_id AS "import_channel_id",
			attempted_response AS "attempted_response",
			response_error AS "response_error"

		FROM d_m${localChannelId}
		WHERE id = #{messageId}
	</select>
	
	<select id="selectConnectorMessagesByIds" resultMap="connectorMessage">
		SELECT 
			id AS "id",
			message_id AS "message_id",
			date_created AS "date_created",
			status AS "status",
			connector_name AS "connector_name",
			connector_map AS "connector_map",
			channel_map AS "channel_map",
			response_map AS "response_map",
			errors AS "errors",
			send_attempts AS "send_attempts",
			${localChannelId} AS local_channel_id
		FROM d_mm${localChannelId}
		WHERE message_id = #{messageId}
		AND id IN
		<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
			#{metaDataId}
		</foreach>
		ORDER BY chain_id ASC, order_id ASC
	</select>
	
	<select id="selectMessageContent" resultMap="messageContent">
		SELECT
			metadata_id,
			message_id,
			content_type,
			(CASE
				WHEN is_encrypted = TRUE THEN NULL
				ELSE content
			END) AS "content",
			(CASE
				WHEN is_encrypted = TRUE THEN content
				ELSE NULL
			END) AS "encrypted_content",
			data_type

		FROM d_mc${localChannelId}
		WHERE message_id = #{messageId}
		AND metadata_id IN
		<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
			#{metaDataId}
		</foreach>
	</select>
	
	<select id="selectCustomMetaData" parameterType="map" resultType="map">
		SELECT *
		FROM d_mcm${localChannelId}
		WHERE metadata_id = #{metaDataId}
		AND message_id = #{messageId}
	</select>
	
	<select id="selectMessageAttachmentIds" parameterType="map" resultType="Attachment">
		SELECT id, type from d_ma${localChannelId}
		WHERE message_id = #{messageId}
		GROUP BY id, type
	</select>
	
	<!-- Message Pruner/Archiver -->
	
	<delete id="prunerDeleteMessages" parameterType="map">
		DELETE FROM d_m${localChannelId} m
		<include refid="prunerDeleteCriteria" />
	</delete>
	
	<delete id="prunerDeleteMessageContent" parameterType="map">
		DELETE FROM d_mc${localChannelId}
		WHERE message_id IN (
			SELECT DISTINCT m.id
			FROM d_m${localChannelId} m
			<include refid="prunerDeleteCriteria" />
		)
	</delete>
	
	<delete id="prunerDeleteConnectorMessages" parameterType="map">
		DELETE FROM d_mm${localChannelId}
		WHERE message_id IN (
			SELECT DISTINCT m.id
			FROM d_m${localChannelId} m
			<include refid="prunerDeleteCriteria" />
		)
	</delete>
	
	<delete id="prunerDeleteCustomMetadata" parameterType="map">
		DELETE FROM d_mcm${localChannelId}
		WHERE message_id IN (
			SELECT DISTINCT m.id
			FROM d_m${localChannelId} m
			<include refid="prunerDeleteCriteria" />
		)
	</delete>
	
	<delete id="prunerDeleteAttachments" parameterType="map">
		DELETE FROM d_ma${localChannelId}
		WHERE message_id IN (
			SELECT DISTINCT m.id
			FROM d_m${localChannelId} m
			<include refid="prunerDeleteCriteria" />
		)
	</delete>
	
	<sql id="prunerDeleteCriteria">
		WHERE m.date_created <![CDATA[ < ]]> #{dateThreshold}
	
		<if test="skipIncomplete == true">
			AND m.processed = TRUE
		</if>
		
		<if test="skipStatuses != null">
			AND NOT EXISTS (
				SELECT 1
				FROM d_mm${localChannelId} mm
				WHERE mm.message_id = m.id
				AND mm.status IN
				<foreach item="status" collection="skipStatuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			)
		</if>
	</sql>
	
	<select id="prunerSelectMessagesToArchive" parameterType="map" resultType="map">
		SELECT
			m.id AS "id",
			m.server_id AS "server_id",
			m.date_created AS "date_created",
			m.processed AS "processed",
			m.import_id AS "import_id",
			m.import_channel_id AS "import_channel_id",
			m.attempted_response AS "attempted_response",
			m.response_error AS "response_error"

		FROM d_m${localChannelId} m
		
		<if test="skipStatuses != null">
			LEFT JOIN d_mm${localChannelId} mm ON mm.message_id = m.id AND mm.status IN
			<foreach item="status" collection="skipStatuses" open="(" separator="," close=")">
				#{status}
			</foreach>
		</if>
	
		WHERE m.date_created <![CDATA[ < ]]> #{dateThreshold}
		
		<if test="skipIncomplete == true">
			AND m.processed = TRUE
		</if>
		
		<if test="skipStatuses != null">
			AND mm.id IS NULL
		</if>
	</select>
</mapper>