<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'conf/dtd/mybatis-3-mapper.dtd'>

<mapper namespace="Message">
	<resultMap id="connectorMessage" type="ConnectorMessage">		
		<id property="messageId" column="message_id" />
		<id property="metaDataId" column="id" />
		<result property="channelId" column="channel_id" />
		<result property="serverId" column="server_id" />
		<result property="dateCreated" column="date_created" />
		<result property="status" column="status" />
		<result property="connectorMap" column="connector_map" typeHandler="MapTypeHandler"/>
		<result property="channelMap" column="channel_map" typeHandler="MapTypeHandler"/>
		<result property="responseMap" column="response_map" typeHandler="MapTypeHandler"/>
		<result property="errors" column="errors" />
		<result property="sendAttempts" column="send_attempts" />
		<collection property="metaDataMap" column="{localChannelId=local_channel_id,messageId=message_id,metaDataId=id}" ofType="map" select="selectCustomMetaData" />
	</resultMap>

	<select id="searchMessages" parameterType="map" resultType="map">
		SELECT m.id AS message_id, m.server_id, m.date_created, m.processed, m.import_id, m.import_channel_id, m.attempted_response, m.response_error, string_agg(mm.id::character varying, ',') AS metadata_ids
		<include refid="searchMessagesBody" />
		GROUP BY m.id

		ORDER BY m.id DESC
		
		<if test="offset != null">
			OFFSET ${offset}
		</if>
		<if test="limit != null">
			LIMIT ${limit}
		</if>
	</select>
	
	<select id="searchMessagesCount" parameterType="map" resultType="long">
		SELECT COUNT(*) FROM (
			SELECT m.id
			<include refid="searchMessagesBody" />
			GROUP BY m.id
		) AS subquery
	</select>
	
	<insert id="insertTask">
		INSERT INTO tasks (task_type, task_description) VALUES (#{taskType}, #{taskDescription})
	</insert>
	
	<select id="selectReprocessingTasks" parameterType="map" resultType="map">
		SELECT rp.reprocessing_id, rp.message_id, mc.content, mc.is_encrypted
		FROM reprocessing rp
		JOIN d_mc${localChannelId} mc ON rp.message_id = mc.message_id AND mc.metadata_id = 0 AND mc.content_type = 'R'
		WHERE completed = FALSE
		AND user_id = #{userId}
		ORDER BY reprocessing_id ASC
		LIMIT 100
	</select>
	
	<insert id="insertReprocessingTasks" parameterType="map">
		INSERT INTO reprocessing (user_id, message_id)
		SELECT DISTINCT #{userId}, m.id
		<include refid="searchMessagesBody" />
	</insert>
	
	<update id="updateReprocessingTasks" parameterType="map">
		UPDATE reprocessing
		SET completed = TRUE
		WHERE reprocessing_id = #{reprocessingId}
	</update>
	
	<delete id="deleteReprocessingTasks" parameterType="map">
		DELETE FROM reprocessing
		WHERE user_id = #{userId}
	</delete>
	
	<sql id="searchMessagesBody">
		FROM d_m${localChannelId} m
		JOIN d_mm${localChannelId} mm ON mm.message_id = m.id
		
		<if test="metaDataSearch != null">
			LEFT JOIN d_mcm${localChannelId} mcm ON mcm.message_id = mm.message_id AND mcm.metadata_id = mm.id
		</if>
		
		<if test="quickSearch != null || rawSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_raw ON mc_raw.message_id = m.id AND mc_raw.metadata_id = 0 AND mc_raw.content_type = 'R' AND mc_raw.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || processedRawSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_processed_raw ON mc_processed_raw.message_id = m.id AND mc_processed_raw.metadata_id = mm.id AND mc_processed_raw.content_type = 'P' AND mc_processed_raw.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || transformedSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_transformed ON mc_transformed.message_id = m.id AND mc_transformed.metadata_id = mm.id AND mc_transformed.content_type = 'T' AND mc_transformed.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || encodedSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_encoded ON mc_encoded.message_id = m.id AND mc_encoded.metadata_id = mm.id AND mc_encoded.content_type = 'E' AND mc_encoded.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || sentSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_sent ON mc_sent.message_id = m.id AND mc_sent.metadata_id = mm.id AND mc_sent.content_type = 'S' AND mc_sent.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || responseSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_response ON mc_response.message_id = m.id AND mc_response.metadata_id = mm.id AND mc_response.content_type = 'O' AND mc_response.is_encrypted = FALSE
		</if>
		
		<if test="quickSearch != null || processedResponseSearch != null">
			LEFT JOIN d_mc${localChannelId} mc_processed_response ON mc_processed_response.message_id = m.id AND mc_processed_response.metadata_id = mm.id AND mc_processed_response.content_type = 'N' AND mc_processed_response.is_encrypted = FALSE
		</if>
		
		<where>
			<if test="messageId != null">
				m.id = #{messageId}
			</if>
			<if test="maxMessageId != null">
				AND m.id <![CDATA[ <= ]]> #{maxMessageId}
			</if>
			<if test="startDate != null">
				AND m.date_created <![CDATA[ >= ]]> #{startDate}
			</if>
			<if test="endDate != null">
				AND m.date_created <![CDATA[ <= ]]> #{endDate}
			</if>
			<if test="serverId != null">
				AND m.server_id = #{serverId}
			</if>
			<if test="importId != null">
				AND m.import_id = #{importId}
			</if>
			<if test="quickSearch != null">
				AND (mc_raw.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_processed_raw.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_transformed.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_encoded.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_sent.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_response.content ILIKE '%' || #{quickSearch} || '%'
				OR mc_processed_response.content ILIKE '%' || #{quickSearch} || '%')
			</if>
			<if test="statuses != null">
				AND mm.status IN
				<foreach item="status" collection="statuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			</if>
			<if test="metaDataIds != null">
				AND mm.id IN
				<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
					#{metaDataId}
				</foreach>
			</if>
			<if test="rawSearch != null">
				AND mc_raw.content ILIKE '%' || #{rawSearch} || '%'
			</if>
			<if test="processedRawSearch != null">
				AND mc_processed_raw.content ILIKE '%' || #{processedRawSearch} || '%'
			</if>
			<if test="transformedSearch != null">
				AND mc_transformed.content ILIKE '%' || #{transformedSearch} || '%'
			</if>
			<if test="encodedSearch != null">
				AND mc_encoded.content ILIKE '%' || #{encodedSearch} || '%'
			</if>
			<if test="sentSearch != null">
				AND mc_sent.content ILIKE '%' || #{sentSearch} || '%'
			</if>
			<if test="responseSearch != null">
				AND mc_response.content ILIKE '%' || #{responseSearch} || '%'
			</if>
			<if test="processedResponseSearch != null">
				AND mc_processed_response.content ILIKE '%' || #{processedResponseSearch} || '%'
			</if>
			<if test="sendAttemptsLower != null">
				AND mm.send_attempts <![CDATA[ >= ]]> #{sendAttemptsLower}
			</if>
			<if test="sendAttemptsUpper != null">
				AND mm.send_attempts <![CDATA[ <= ]]> #{sendAttemptsUpper}
			</if>
			<if test="attachment != null and attachment == true">
				AND EXISTS (SELECT 1 FROM d_ma${localChannelId} ma WHERE ma.message_id = m.id)
			</if>
			<if test="metaDataSearch != null">
				<foreach item="element" collection="metaDataSearch">
				AND mcm.${element.columnName} 
				
				<choose>
					<when test="element.ignoreCase">
						<![CDATA[ ILIKE ]]> 
					</when>
					<when test="element.operator == 'EQUAL'">
						<![CDATA[ = ]]> 
					</when>
					<when test="element.operator == 'TEXT_EQUAL'">
						<![CDATA[ = ]]> 
					</when>
					<when test="element.operator == 'NOT_EQUAL'">
						<![CDATA[ != ]]> 
					</when>
					<when test="element.operator == 'LESS_THAN'">
						<![CDATA[ < ]]> 
					</when>
					<when test="element.operator == 'LESS_THAN_OR_EQUAL'">
						<![CDATA[ <= ]]> 
					</when>
					<when test="element.operator == 'GREATER_THAN'">
						<![CDATA[ > ]]> 
					</when>
					<when test="element.operator == 'GREATER_THAN_OR_EQUAL'">
						<![CDATA[ >= ]]> 
					</when>
					<when test="element.operator == 'CONTAINS' || element.operator == 'STARTS_WITH' || element.operator == 'ENDS_WITH'">
						<![CDATA[ LIKE ]]> 
					</when>
				</choose>
				
				<if test="element.operator == 'CONTAINS' || element.operator == 'ENDS_WITH'">
					'%' ||
				</if>
					#{element.value}
				<if test="element.operator == 'CONTAINS' || element.operator == 'STARTS_WITH'">
					|| '%'
				</if>	
					
				</foreach>
			</if>
			
			
		</where>
	</sql>
	
	<select id="selectMessageById" resultType="map">
		SELECT *
		FROM d_m${localChannelId}
		WHERE id = #{messageId}
	</select>
	
	<select id="selectConnectorMessagesByIds" resultMap="connectorMessage">
		SELECT id, message_id, date_created, status, connector_map, channel_map, response_map, errors, send_attempts, ${localChannelId} AS local_channel_id
		FROM d_mm${localChannelId}
		WHERE message_id = #{messageId}
		AND id IN
		<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
			#{metaDataId}
		</foreach>
	</select>
	
	<select id="selectMessageContent" resultType="map">
		SELECT *
		FROM d_mc${localChannelId}
		WHERE message_id = #{messageId}
		AND metadata_id IN
		<foreach item="metaDataId" collection="metaDataIds" open="(" separator="," close=")">
			#{metaDataId}
		</foreach>
	</select>
	
	<select id="selectCustomMetaData" parameterType="map" resultType="map">
		SELECT *
		FROM d_mcm${localChannelId}
		WHERE metadata_id = #{metaDataId}
		AND message_id = #{messageId}
	</select>
	
	<select id="selectMessageAttachmentIds" parameterType="map" resultType="Attachment">
		SELECT id, type from d_ma${localChannelId}
		WHERE message_id = #{messageId}
		GROUP BY id, type
	</select>
	
	
	
	<!-- Message Pruner/Archiver -->
	
	<delete id="prunerDeleteMessages" parameterType="map">
		DELETE FROM d_m${localChannelId} m
		<include refid="prunerDeleteCriteria" />
	</delete>
	
	<delete id="prunerDeleteMessageContent" parameterType="map">
		DELETE FROM d_mc${localChannelId} mc
		USING d_m${localChannelId} m
		
		<include refid="prunerDeleteCriteria" />
		AND m.id = mc.message_id
	</delete>
	
	<sql id="prunerDeleteCriteria">
		WHERE m.date_created <![CDATA[ < ]]> #{dateThreshold}
	
		<if test="skipIncomplete == true">
			AND m.processed = TRUE
		</if>
		
		<if test="skipStatuses != null">
			AND NOT EXISTS (
				SELECT 1
				FROM d_mm${localChannelId} mm
				WHERE mm.message_id = m.id
				AND mm.status IN
				<foreach item="status" collection="skipStatuses" open="(" separator="," close=")">
					#{status}
				</foreach>
			)
		</if>
	</sql>
	
	<select id="prunerSelectMessagesToArchive" parameterType="map" resultType="map">
		SELECT m.*
		FROM d_m${localChannelId} m
		
		<if test="skipStatuses != null">
			LEFT JOIN d_mm${localChannelId} mm ON mm.message_id = m.id AND mm.status IN
			<foreach item="status" collection="skipStatuses" open="(" separator="," close=")">
				#{status}
			</foreach>
		</if>
	
		WHERE m.date_created <![CDATA[ < ]]> #{dateThreshold}
		
		<if test="skipIncomplete == true">
			AND m.processed = TRUE
		</if>
		
		<if test="skipStatuses != null">
			AND mm.id IS NULL
		</if>
	</select>
</mapper>