<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"conf/sql-map-2.dtd">

<sqlMap namespace="Event">
	<parameterMap class="com.mirth.connect.model.Event" id="insert-event-param">
		<parameter property="event" jdbcType="CLOB" />
		<parameter property="level" jdbcType="VARCHAR" />
		<parameter property="description" jdbcType="CLOB" />
		<parameter property="attributes" jdbcType="CLOB" />
	</parameterMap>

	<resultMap class="com.mirth.connect.model.Event" id="get-event-result">
		<result property="id" column="ID" />
		<result property="date" column="DATE_CREATED" />
		<result property="level" column="EVENT_LEVEL"/>
		<result property="event" column="EVENT" />
		<result property="description" column="DESCRIPTION" />
		<result property="attributes" column="ATTRIBUTES" />
	</resultMap>

	<sql id="eventFilterCriteria">
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="id">
				ID = $id$
			</isNotNull>
			<isNotNull prepend="AND" property="event">
				LOWER(SUBSTRING(EVENT,1,DATALENGTH(EVENT))) LIKE LOWER('%$event$%')
			</isNotNull>
			<isNotNull prepend="AND" property="level">
				EVENT_LEVEL = '$level$'
			</isNotNull>
			<isNotNull prepend="AND" property="startDate">
				DATE_CREATED <![CDATA[ >= ]]> CONVERT(DATETIME,'$startDate$',120)
			</isNotNull>
			<isNotNull prepend="AND" property="endDate">
				DATE_CREATED <![CDATA[ <= ]]> CONVERT(DATETIME,'$endDate$',120)
			</isNotNull>
		</dynamic>
	</sql>
		
	<select id="getEventsByPage" parameterClass="java.util.Map" resultMap="get-event-result">
		SELECT
			EVENT.*
		FROM
			EVT_TMP_$uid$ AS TEMP_TABLE,
			EVENT
		WHERE
			TEMP_TABLE.ID = EVENT.ID
			<dynamic prepend="AND">
				<isNotNull property="first">
					<isNotNull property="last">
						TEMP_TABLE.SEQUENCE_ORDER BETWEEN #first# AND #last#
					</isNotNull>
				</isNotNull>
			</dynamic>
		ORDER BY TEMP_TABLE.DATE_CREATED DESC
	</select>
	
	<select id="getEventsByPageLimit" parameterClass="java.util.Map" resultMap="get-event-result">
		SELECT * FROM (
			SELECT TOP ($offset$ + $limit$) ROW_NUMBER() OVER (ORDER BY DATE_CREATED DESC) 
				AS ROWID, EVENT.*
			FROM
				EVENT
			<include refid="eventFilterCriteria" />
		) AS EVENTS_WITH_ROWIDS
		WHERE ROWID <![CDATA[ > ]]> $offset$ AND ROWID <![CDATA[ <= ]]> ($offset$ + $limit$)
	</select>

	<statement id="dropTempEventTable" parameterClass="java.lang.String">
		DROP TABLE EVT_TMP_$uid$
	</statement>

	<statement id="createTempEventTable" parameterClass="java.lang.String">
		CREATE TABLE EVT_TMP_$uid$ (ID INTEGER, SEQUENCE_ORDER INTEGER IDENTITY (1, 1) NOT NULL, DATE_CREATED TIMESTAMP)
	</statement>

	<statement id="createTempEventTableIndex" parameterClass="java.lang.String">
		CREATE INDEX IDX_EVT_TMP_$uid$ ON EVT_TMP_$uid$ (SEQUENCE_ORDER, ID)
	</statement>

	<!-- NOTE: The nested SELECT needs an ORDER BY DATE_CREATED, which Derby does not support -->
	<insert id="populateTempEventTable" parameterClass="java.util.Map">
		INSERT INTO EVT_TMP_$uid$ (ID)
			(SELECT ID
			FROM EVENT
			<include refid="eventFilterCriteria" />)
	</insert>
	
	<delete id="deleteTempEventTable" parameterClass="java.lang.String">
		DROP TABLE EVT_TMP_$uid$
	</delete>

	<delete id="deleteTempEventTableIndex" parameterClass="java.lang.String">
		DROP INDEX IDX_EVT_TMP_$uid$
	</delete>

	<insert id="insertEvent" parameterMap="insert-event-param">
		INSERT INTO
		EVENT (EVENT, EVENT_LEVEL, DESCRIPTION, ATTRIBUTES)
		VALUES (?, ?, ?, ?)
	</insert>

	<delete id="deleteEvent" parameterClass="java.util.Map">
		DELETE FROM EVENT
		<include refid="eventFilterCriteria" />
	</delete>
</sqlMap>