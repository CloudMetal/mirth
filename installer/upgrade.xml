<project name="upgrade" basedir=".">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="lib/ant-contrib-0.6.jar" />

	<target name="cleanOldInstaller">
		<condition property="os.windows" value="true">
			<os family="windows" />
		</condition>
		<condition property="os.unix" value="true">
			<os family="unix" />
		</condition>
		<if>
			<equals arg1="${os.windows}" arg2="true" />
			<then>
				<available property="manager.installed" value="true" file="${install.path}/mirth-manager.jar" />
				<if>
					<equals arg1="${manager.installed}" arg2="true" />
					<then>
						<echo>deleting manager</echo>
						<delete file="${install.path}/mirth-manager.jar" />
					</then>
				</if>

				<taskdef classpath="lib/orangevolt-ant-tasks-1.3.5.jar:lib/roxes-win32forjava-1.0.4.jar" resource="com/orangevolt/tools/ant/taskdefs.properties" />
				<echo>clearing registry settings</echo>
				<win32.registry root="HKEY_LOCAL_MACHINE" key="SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Mirth">
					<delete />
				</win32.registry>
				<win32.registry root="HKEY_LOCAL_MACHINE" key="SOFTWARE\Mirth">
					<delete />
				</win32.registry>
				<property environment="env" />
				<delete dir="${env.HOMEPATH}\Start Menu\Programs\Mirth" failonerror="false" />
				<delete file="${env.HOMEPATH}\Start Menu\Programs\Startup\Mirth Server Manager.lnk" failonerror="false" />

				<echo>stopping and uninstalling service</echo>
				<exec executable="cmd" dir="${install.path}" failifexecutionfails="false">
					<arg value="/c" />
					<arg value="StopMirth-NT.bat" />
				</exec>
				<exec executable="cmd" dir="${install.path}" failifexecutionfails="false">
					<arg value="/c" />
					<arg value="UninstallMirth-NT.bat" />
				</exec>
			</then>
			<elseif>
				<equals arg1="${os.unix}" arg2="true" />
				<then>
					<echo>stopping daemon</echo>
					<exec executable="mirth-daemon" dir="${install.path}" failifexecutionfails="false">
						<arg value="stop" />
					</exec>
				</then>
			</elseif>
		</if>

		<echo>removing libraries</echo>
		<delete failonerror="false">
			<fileset dir="${install.path}/lib">
				<exclude name="custom/**" />
			</fileset>
		</delete>
	</target>

	<target name="backup">
		<available property="do.upgrade" value="true" file="${install.path}/conf/mirth.properties" />
		<if>
			<equals arg1="${do.upgrade}" arg2="true" />
			<then>
				<property file="${install.path}/conf/mirth.properties" />
				<echo>database: ${database}</echo>
				<if>
					<equals arg1="${database}" arg2="derby" />
					<then />
					<else>
						<propertyfile file="${install.path}/conf/install.tmp.properties">
							<entry key="do.upgrade" value="true" />
						</propertyfile>
						<echo>creating temp database properties</echo>
						<property file="${install.path}/conf/${database}-SqlMapConfig.properties" />
						<propertyfile file="${install.path}/conf/database.tmp.properties">
							<entry key="database.tmp" value="${database}" />
							<entry key="url.tmp" value="${url}" />
							<entry key="username.tmp" value="${username}" />
							<entry key="password.tmp" value="${password}" />
						</propertyfile>
					</else>
				</if>
			</then>
			<else>
				<echo>no previous installation found</echo>
			</else>
		</if>
	</target>

	<target name="restore">
		<property file="${install.path}/conf/install.tmp.properties" />
		<if>
			<equals arg1="${do.upgrade}" arg2="true" />
			<then>
				<echo>performing restore of configuration properties</echo>
				<property file="${install.path}/conf/database.tmp.properties" />
				<propertyfile file="${install.path}/conf/mirth.properties">
					<entry key="database" value="${database.tmp}" />
				</propertyfile>
				<echo>updating database properties: ${database.tmp}</echo>
				<propertyfile file="${install.path}/conf/${database.tmp}-SqlMapConfig.properties">
					<entry key="database" value="${database.tmp}" />
					<entry key="url" value="${url.tmp}" />
					<entry key="username" value="${username.tmp}" />
					<entry key="password" value="${password.tmp}" />
				</propertyfile>
			</then>
		</if>
	</target>

	<target name="chmodMirth">
		<echo>setting permissions on mirth.sh</echo>
		<chmod perm="ugo+rx" dir="${install.path}" includes="mirth.sh" />
	</target>

	<target name="chmodShell">
		<echo>setting permissions on shell.sh</echo>
		<chmod perm="ugo+rx" dir="${install.path}" includes="shell.sh" />
	</target>

	<target name="startManager">
		<echo>starting manager</echo>
		<exec executable="cmd" dir="${install.path}" spawn="true">
			<arg value="/c" />
			<arg value="Mirth Manager.exe" />
		</exec>
	</target>
</project>