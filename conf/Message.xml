<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Message">
	<typeAlias alias="message" type="com.webreach.mirth.model.MessageObject" />
	<typeAlias alias="messageFilter" type="com.webreach.mirth.model.filters.MessageObjectFilter" />

	<sql id="messageFilterCriteria">
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property="id">
				ID = #id#
			</isNotNull>
			<isNotNull prepend="AND" property="channelId">
				CHANNEL_ID = #channelId#
			</isNotNull>
			<isNotNull prepend="AND" property="status">
				STATUS = #status#
			</isNotNull>
			<isNotNull prepend="AND" property="connectorName">
				CONNECTOR_NAME = #connectorName#
			</isNotNull>
			<isNotNull prepend="AND" property="startDate">
				DATE_CREATED <![CDATA[ >= ]]> #startDate#
			</isNotNull>
			<isNotNull prepend="AND" property="endDate">
				DATE_CREATED <![CDATA[ <= ]]> #endDate#
			</isNotNull>
		</dynamic>
	</sql>
	
	<resultMap class="message" id="get-message-result">
		<result property="id" column="ID" jdbcType="VARCHAR" />
		<result property="channelId" column="CHANNEL_ID" jdbcType="VARCHAR" />
		<result property="dateCreated" column="DATE_CREATED" jdbcType="TIMESTAMP" />
		<result property="version" column="VERSION" jdbcType="VARCHAR" />
		<result property="encrypted" column="IS_ENCRYPTED" jdbcType="SMALLINT" />
		<result property="status" column="STATUS" jdbcType="VARCHAR" />
		<result property="rawData" column="RAW_DATA" jdbcType="CLOB" />
		<result property="rawDataProtocol" column="RAW_DATA_PROTOCOL" jdbcType="VARCHAR" />
		<result property="transformedData" column="TRANSFORMED_DATA" jdbcType="CLOB" />
		<result property="transformedDataProtocol" column="TRANSFORMED_DATA_PROTOCOL" jdbcType="VARCHAR" />
		<result property="encodedData" column="ENCODED_DATA" jdbcType="CLOB" />
		<result property="encodedDataProtocol" column="ENCODED_DATA_PROTOCOL" jdbcType="VARCHAR" />
		<result property="variableMap" column="VARIABLE_MAP" jdbcType="CLOB" />
		<result property="connectorName" column="CONNECTOR_NAME" jdbcType="VARCHAR" />
		<result property="errors" column="ERRORS" jdbcType="CLOB" />
	</resultMap>
	
	<select id="getMessageByPage" resultClass="message" parameterClass="java.util.Map" resultMap="get-message-result">
		SELECT
			MESSAGE.*
		FROM
			MESSAGE_TEMP,
			MESSAGE
		WHERE
			MESSAGE_TEMP.ID = MESSAGE.SEQUENCE_ID
			<dynamic prepend="AND">
				<isParameterPresent>
					MESSAGE_TEMP.SEQUENCE_ORDER BETWEEN #first# AND #last#
				</isParameterPresent>
			</dynamic>
	</select>

	<statement id="dropTempMessageTable">
		DROP TABLE MESSAGE_TEMP
	</statement>

	<statement id="createTempMessageTable">
		CREATE TABLE MESSAGE_TEMP (ID INTEGER, SEQUENCE_ORDER INTEGER GENERATED ALWAYS AS IDENTITY)
	</statement>

	<statement id="createTempMessageTableIndex">
		CREATE INDEX INDEX_MESSAGE_TEMP ON MESSAGE_TEMP(SEQUENCE_ORDER, ID)
	</statement>

	<!-- NOTE: The nested SELECT needs an ORDER BY DATE_CREATED, which Derby does not support -->
	<insert id="populateTempMessageTable" parameterClass="java.util.Map">
		INSERT INTO MESSAGE_TEMP(ID)
			(SELECT SEQUENCE_ID
			FROM MESSAGE
			<include refid="messageFilterCriteria" />)
	</insert>
	
	<insert id="insertMessage" parameterClass="message">
		INSERT INTO
		MESSAGE (ID, CHANNEL_ID, DATE_CREATED, VERSION, IS_ENCRYPTED, STATUS, RAW_DATA, RAW_DATA_PROTOCOL, TRANSFORMED_DATA, TRANSFORMED_DATA_PROTOCOL, ENCODED_DATA, ENCODED_DATA_PROTOCOL, VARIABLE_MAP, CONNECTOR_NAME, ERRORS)
		VALUES (#id#, #channelId#, #dateCreated#, #version#, #encrypted#, #status#, #rawData#, #rawDataProtocol#, #transformedData#, #transformedDataProtocol#, #encodedData#, #encodedDataProtocol#, #variableMap#, #connectorName#, #errors#)
	</insert>
	
	<update id="updateMessage" parameterClass="message">
		UPDATE MESSAGE
		SET STATUS = #status#,
			RAW_DATA = #rawData#,
			TRANSFORMED_DATA = #transformedData#,
			ENCODED_DATA = #encodedData#,
			VARIABLE_MAP = #variableMap#,
			ERRORS = #errors#
		WHERE ID = #id#
	</update>
	
	<delete id="deleteMessage" parameterClass="java.util.Map">
		DELETE FROM MESSAGE
		<include refid="messageFilterCriteria" />
	</delete>
</sqlMap>